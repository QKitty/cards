/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import com.gmail.qkitty6.patterns.observer.IObserver;
import datamodel.interfaces.IControllable;
import datamodel.interfaces.IController;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;

/**
 * A class representing an application window that has a controller registered with it
 * @author qkitt
 */
public class BaseCardWindow extends javax.swing.JFrame implements IControllable, IObserver<Void> {
    
    protected IController controller;

    /**
     * Creates new form BaseCardWindow
     */
    public BaseCardWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(400, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaseCardWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new BaseCardWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

//<editor-fold defaultstate="collapsed" desc="IControllable implementation">
    @Override
    public IController getController() {
        return this.controller;
    }
    
    @Override
    public boolean setController(IController aController) {
        boolean result = false;
        if(null != aController){
            if(null != this.controller){
                this.controller.getExpModel().removeObserver(this);
            }
            this.controller = aController;
            this.controller.getExpModel().registerObserver(this);
        }
        return result;
    }
//</editor-fold>
    
    public void centreFrame(){
        double dblHalfWidth = this.getWidth() / 2.0d;
        double dblHalfHeight = this.getHeight() / 2.0d;
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Point location = new Point();
        Double x = (screenSize.getWidth() / 2.0d) - dblHalfWidth;
        Double y = (screenSize.getHeight() / 2.0d) - dblHalfHeight;
        location.x = x.intValue();
        location.y = y.intValue();
        this.setLocation(location);
    }
}
